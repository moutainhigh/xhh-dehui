<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.store.dao.NoticeMapper">
	<resultMap id="BaseResultMap" type="com.store.model.Notice">
		<id column="notice_id" jdbcType="VARCHAR" property="noticeId" />
		<result column="notice_title" jdbcType="VARCHAR"
			property="noticeTitle" />
		<result column="notice_content" jdbcType="VARCHAR"
			property="noticeContent" />
		<result column="notice_ending" jdbcType="VARCHAR"
			property="noticeEnding" />
		<result column="notice_image" jdbcType="VARCHAR"
			property="noticeImage" />
		<result column="notice_status" jdbcType="VARCHAR"
			property="noticeStatus" />
		<result column="create_time" jdbcType="TIMESTAMP"
			property="createTime" />
	</resultMap>
	<resultMap extends="BaseResultMap" id="ResultMapWithBLOBs"
		type="com.store.model.Notice">
		<result column="notice_content" jdbcType="LONGVARCHAR"
			property="noticeContent" />
	</resultMap>
	<sql id="Base_Column_List">
		notice_id, notice_title, notice_ending, notice_image,
		notice_status, create_time
	</sql>
	<sql id="Blob_Column_List">
		notice_content
	</sql>
	<select id="selectByPrimaryKey" parameterType="java.lang.String"
		resultMap="ResultMapWithBLOBs">
		select
		<include refid="Base_Column_List" />
		,
		<include refid="Blob_Column_List" />
		from store_notice
		where notice_id = #{noticeId,jdbcType=VARCHAR}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.String">
		delete from
		store_notice
		where notice_id = #{noticeId,jdbcType=VARCHAR}
	</delete>
	<insert id="insert" parameterType="com.store.model.Notice">
		insert into store_notice
		(notice_id, notice_title, notice_ending,
		notice_image, notice_status,
		create_time,
		notice_content)
		values (#{noticeId,jdbcType=VARCHAR},
		#{noticeTitle,jdbcType=VARCHAR},
		#{noticeEnding,jdbcType=VARCHAR},
		#{noticeImage,jdbcType=VARCHAR}, #{noticeStatus,jdbcType=VARCHAR},
		#{createTime,jdbcType=TIMESTAMP},
		#{noticeContent,jdbcType=LONGVARCHAR})
	</insert>
	<insert id="insertSelective"
		parameterType="com.store.model.Notice">
		insert into store_notice
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="noticeId != null">
				notice_id,
			</if>
			<if test="noticeTitle != null">
				notice_title,
			</if>
			<if test="noticeEnding != null">
				notice_ending,
			</if>
			<if test="noticeImage != null">
				notice_image,
			</if>
			<if test="noticeStatus != null">
				notice_status,
			</if>
			<if test="createTime != null">
				create_time,
			</if>
			<if test="noticeContent != null">
				notice_content,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="noticeId != null">
				#{noticeId,jdbcType=VARCHAR},
			</if>
			<if test="noticeTitle != null">
				#{noticeTitle,jdbcType=VARCHAR},
			</if>
			<if test="noticeEnding != null">
				#{noticeEnding,jdbcType=VARCHAR},
			</if>
			<if test="noticeImage != null">
				#{noticeImage,jdbcType=VARCHAR},
			</if>
			<if test="noticeStatus != null">
				#{noticeStatus,jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				#{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="noticeContent != null">
				#{noticeContent,jdbcType=LONGVARCHAR},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective"
		parameterType="com.store.model.Notice">
		update store_notice
			<set>
				<if test="noticeTitle != null">
					notice_title = #{noticeTitle,jdbcType=VARCHAR},
				</if>
				<if test="noticeEnding != null">
					notice_ending = #{noticeEnding,jdbcType=VARCHAR},
				</if>
				<if test="noticeImage != null">
					notice_image = #{noticeImage,jdbcType=VARCHAR},
				</if>
				<if test="noticeStatus != null">
					notice_status = #{noticeStatus,jdbcType=VARCHAR},
				</if>
				<if test="createTime != null">
					create_time = #{createTime,jdbcType=TIMESTAMP},
				</if>
				<if test="noticeContent != null">
					notice_content = #{noticeContent,jdbcType=LONGVARCHAR},
				</if>
			</set>
		where notice_id = #{noticeId,jdbcType=VARCHAR}
	</update>
	<update id="updateByPrimaryKeyWithBLOBs"
		parameterType="com.store.model.Notice">
		update store_notice
		set notice_title =
		#{noticeTitle,jdbcType=VARCHAR},
		notice_ending =
		#{noticeEnding,jdbcType=VARCHAR},
		notice_image =
		#{noticeImage,jdbcType=VARCHAR},
		notice_status =
		#{noticeStatus,jdbcType=VARCHAR},
		create_time =
		#{createTime,jdbcType=TIMESTAMP},
		notice_content =
		#{noticeContent,jdbcType=LONGVARCHAR}
		where notice_id =
		#{noticeId,jdbcType=VARCHAR}
	</update>
	<update id="updateByPrimaryKey"
		parameterType="com.store.model.Notice">
		update store_notice
		set notice_title =
		#{noticeTitle,jdbcType=VARCHAR},
		notice_ending =
		#{noticeEnding,jdbcType=VARCHAR},
		notice_image =
		#{noticeImage,jdbcType=VARCHAR},
		notice_status =
		#{noticeStatus,jdbcType=VARCHAR},
		create_time =
		#{createTime,jdbcType=TIMESTAMP}
		where notice_id =
		#{noticeId,jdbcType=VARCHAR}
	</update>
	<select id="selectAll" resultMap="BaseResultMap">
		select * from store_notice
	</select>
	<select id="selectByNoticeId" 
			resultMap="BaseResultMap"
			parameterType="java.lang.String">
		select * from store_notice 
		where notice_id = #{noticeId,jdbcType=VARCHAR}
	</select>
</mapper>